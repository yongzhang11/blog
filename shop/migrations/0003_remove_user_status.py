# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2019-05-03 12:42
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
# import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
from django.core.validators import RegexValidator

username_validator = RegexValidator(
    regex=r'^[a-zA-Z0-9@./+-_]+$',
    message='Username must contain only letters, digits, and @/./+/-/_.',
    code='invalid_username',
)


class Migration(migrations.Migration):
    dependencies = [
        ('shop', '0002_remove_user_status'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False,
                                                     help_text='Designates that this user has all permissions without explicitly assigning them.',
                                                     verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'},
                                              help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.',
                                              max_length=150, unique=True,
                                              validators=[username_validator],
                                              verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False,
                                                 help_text='Designates whether the user can log into this admin site.',
                                                 verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True,
                                                  help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.',
                                                  verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('avatar', models.ImageField(blank=True, default='avatar/default.png', max_length=200, null=True,
                                             upload_to='avatar/%Y/%m', verbose_name='用户头像')),
                ('balance', models.FloatField(default=0, verbose_name='余额')),
                ('date_reg', models.DateTimeField(auto_now_add=True, verbose_name='注册时间')),
                ('mobile', models.CharField(max_length=11, verbose_name='手机')),
                ('address', models.CharField(max_length=200, verbose_name='地址')),
                ('post', models.CharField(max_length=10, verbose_name='邮编')),
                ('status', models.BooleanField(default=False, verbose_name='账户状态')),
                ('groups', models.ManyToManyField(blank=True,
                                                  help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.',
                                                  related_name='user_set', related_query_name='user', to='auth.Group',
                                                  verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.',
                                                            related_name='user_set', related_query_name='user',
                                                            to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
                'ordering': ['-id'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='评论')),
                ('pid', models.PositiveIntegerField(default=0, verbose_name='product id')),
                ('publish_time', models.DateTimeField(auto_now_add=True, verbose_name='发布时间')),
                ('name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                           to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '评论',
                'verbose_name_plural': '评论',
                'ordering': ['-publish_time'],
            },
        ),
        migrations.CreateModel(
            name='Fenlei',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='分类名称')),
                ('desc', models.CharField(max_length=2000, verbose_name='分类描述')),
            ],
            options={
                'verbose_name': '商品分类',
                'verbose_name_plural': '商品分类',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product', models.IntegerField(default=0, verbose_name='商品编号')),
                ('time', models.DateTimeField(auto_now_add=True, verbose_name='时间')),
                ('money', models.FloatField(default=0, verbose_name='金额')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                           to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '订单',
                'verbose_name_plural': '订单',
            },
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='名称')),
                ('desc', models.TextField(verbose_name='商品描述')),
                ('image',
                 models.ImageField(blank=True, default='default.png', max_length=200, null=True, upload_to='%Y/%m',
                                   verbose_name='商品图片')),
                ('price', models.FloatField(default=0, verbose_name='价格')),
                ('stock', models.IntegerField(default=0, verbose_name='库存')),
                ('time', models.DateTimeField(auto_now_add=True, verbose_name='上架时间')),
                ('ptype',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.Fenlei', verbose_name='类型')),
            ],
            options={
                'verbose_name': '商品目录',
                'verbose_name_plural': '商品目录',
            },
        ),
        migrations.CreateModel(
            name='Shopcar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product', models.IntegerField(default=0, verbose_name='商品编号')),
                ('money', models.FloatField(default=0, verbose_name='金额')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                           to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '购物车',
                'verbose_name_plural': '购物车',
            },
        ),
    ]
